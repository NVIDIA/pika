apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: quay.io/slin/pika:latest
        imagePullPolicy: Always
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        volumeMounts:
          - name: tenant-config
            mountPath: /etc/config/tenants.yaml
            subPath: tenants.yaml
          - name: vault-patch
            mountPath: /etc/tokens
      - name: vault-agent
        image: quay.io/nvidia/vault:1.3.0
        imagePullPolicy: IfNotPresent
        command:
          - /bin/sh
          - -ec
        args:
          - sleep 2 && ls /etc/vault/ && vault agent -config=/etc/vault/config.hcl
        envFrom:
          - configMapRef:
              name: pika-vault-config
        volumeMounts:
          - mountPath: /etc/vault
            name: pika-vault-config
          - mountPath: /etc/tokens
            name: vault-patch
        securityContext:
          runAsNonRoot: true
          runAsUser: 100
          runAsGroup: 1000
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false # Needed because vault agent writes to `/home/vault/*`.
      serviceAccountName: pika-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: tenant-config
        name: tenant-config
      - configMap:
          items:
          - key: VAULT_CONFIG
            path: config.hcl
          name: pika-vault-config
        name: pika-vault-config
      - name: vault-patch
        emptyDir:
          medium: Memory
      - name: vault-patch-aws-sns
        emptyDir:
          medium: Memory